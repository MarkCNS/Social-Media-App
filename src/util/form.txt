import React from "react";
import { Formik, Field, Form } from "formik";
import * as Yup from "yup";

const SignUp = () => {
  const SignupSchema = Yup.object().shape({
    firstName: Yup.string()
      .min(1, "*minimum 8 characters long")
      .max(50, "*maximum 20 characters long")
      .required("*first name is required"),
    lastName: Yup.string()
      .min(1, "*minimum 8 characters long")
      .max(50, "*maximum 20 characters long")
      .required("*last name is required"),
    email: Yup.string()
      .email("*please enter a valid email address")
      .required("*email is required"),
    password: Yup.string()
      .min(4, "*password must be four characters long!")
      .max(20, "*password must not exceed 20 characters!")
      .required("*password is required"),
    confirmpassword: Yup.string()
      .when("password", {
        is: (val) => (val && val.length > 0 ? true : false),
        then: Yup.string().oneOf(
          [Yup.ref("password")],
          "*both password need to be the same"
        ),
      })
      .required("*password confirmation is required"),
    gender: Yup.string().required("*please select a gender"),
    status: Yup.string().required("*choose an option"),
  });
  return (
    <div>
      <h1>Signup Form</h1>
      <Formik
        initialValues={{
          firstName: "",
          lastName: "",
          email: "",
          password: "",
          confirmpassword: "",
          gender: "",
          status: "",
        }}
        validationSchema={SignupSchema}
        onSubmit={(values) => {
          alert(JSON.stringify(values, null, 2));
          console.log(values);
        }}
      >
        {({ errors, touched }) => (
          <Form
            style={{ display: "flex", flexDirection: "column", gap: "8px" }}
          >
            <label htmlFor="firstName">First Name :</label>
            <Field id="firstName" name="firstName" placeholder="First Name" />
            {errors.firstName && touched.firstName ? (
              <div>{errors.firstName}</div>
            ) : null}
            <label htmlFor="lastName">Last Name :</label>
            <Field id="lastName" name="lastName" placeholder="Last Name" />
            {errors.lastName && touched.lastName ? (
              <div>{errors.lastName}</div>
            ) : null}
            <label htmlFor="email">Email :</label>
            <Field
              id="email"
              name="email"
              placeholder="someone@gmail.com"
              type="email"
            />
            {errors.email && touched.email ? <div>{errors.email}</div> : null}
            <label htmlFor="password">Password :</label>
            <Field
              placeholder="Enter Password"
              name="password"
              type="password"
            />
            {errors.password && touched.password ? (
              <div>{errors.password}</div>
            ) : null}
            <label htmlFor="confirmpassword">Confirm Password :</label>
            <Field
              placeholder="Confirm Password"
              name="confirmpassword"
              type="password"
            />
            {errors.confirmpassword && touched.confirmpassword ? (
              <div>{errors.confirmpassword}</div>
            ) : null}
            <label htmlFor="gender">Gender :</label>
            <Field as="select" name="gender">
              <option>- select a gender -</option>
              <option value="male">Male</option>
              <option value="female">Female</option>
              <option value="other">Other</option>
            </Field>
            {errors.gender && touched.gender ? (
              <div>{errors.gender}</div>
            ) : null}
            <div id="radioGroup">Marital Status :</div>
            <div role="group" aria-labelledby="radioGroup">
              <label>
                <Field type="radio" name="status" value="single" />
                Single
              </label>
              <label>
                <Field type="radio" name="status" value="married" />
                Married
              </label>
              <label>
                <Field type="radio" name="status" value="widowed" />
                Widowed
              </label>
            </div>
            {errors.status && touched.status ? (
              <div>{errors.status}</div>
            ) : null}
            <button type="submit">Submit</button>
          </Form>
        )}
      </Formik>
    </div>
  );
};

export default SignUp;
